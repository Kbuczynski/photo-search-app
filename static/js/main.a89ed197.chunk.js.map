{"version":3,"sources":["constants.js","components/Search/Reset/index.js","components/Search/Submit/index.js","components/Search/Suggestions/SuggestionsItem/index.js","components/Search/Suggestions/index.js","components/Search/index.js","components/Main/index.js","components/PageNotFound/index.js","hooks/useApi/index.js","utils.js","components/ErrorMessage/index.js","components/Photos/PhotoModal/index.js","components/Photos/PhotoItem/index.js","components/Photos/PhotoColumn/index.js","components/Photos/PhotosSimilar/index.js","components/Photos/index.js","components/Index/index.js","index.js"],"names":["API_WORDS","getDataTypes","BREAKPOINTS","trendings","flower","wallpapers","backgrounds","happy","love","Reset","inputValue","resetRef","useRef","useEffect","resetButton","current","length","classList","add","remove","type","className","ref","onClick","title","defaultProps","Submit","SuggestionsItem","withRouter","history","suggestion","setInputValue","push","defaultProp","Suggestions","isGray","show","useState","result","setResult","timeoutId","setTimeoutId","currentTimeoutId","setTimeout","axios","get","then","response","clearTimeout","Object","keys","data","map","word","Search","query","window","innerWidth","pageWidth","setPageWidth","inputRef","toggleSuggestions","setToggleSuggestions","addEventListener","onSubmit","e","preventDefault","onReset","focus","autoComplete","placeholder","value","onInput","input","target","onFocus","onBlur","Main","href","trend","index","to","PageNotFound","useApi","isLoading","setIsLoading","error","setError","canceled","a","headers","Authorization","process","catch","message","getData","firstLetterToUpper","string","toUpperCase","slice","ErrorMessage","PhotoModal","id","setToggleModal","role","user","name","username","src","urls","regular","alt","alt_description","location","city","country","PhotoItem","image","url","tags","toggleModal","toString","PhotoColumn","images","PhotosSimilar","scrollValue","setScrollValue","prevScrollValue","setPrevScrollValue","containerRef","scroll","onScroll","scrollLeft","Photos","match","params","colFirst","setColFirst","colSecond","setColSecond","colThird","setColThird","page","setPage","triggerRef","handleNextPage","intersectionObserver","IntersectionObserver","entries","intersectionRatio","undefined","total_pages","arrOne","arrTwo","arrThree","results","forEach","small","handleResult","observe","disconnect","style","width","height","Index","basename","exact","path","component","render","props","ReactDOM","StrictMode","document","getElementById"],"mappings":"uVACaA,EAAY,2BACZC,EACG,kBADHA,EAED,WAECC,EACH,KADGA,EAEJ,IAEIC,EAAY,CACvBC,OAAQ,SACRC,WAAY,aACZC,YAAa,cACbC,MAAO,QACPC,KAAM,Q,OCZFC,G,MAAQ,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACTC,EAAWC,mBAkBjB,OAXAC,qBAAU,WACR,IAAMC,EAAcH,EAASI,QAK7B,OAHAL,EAAWM,OAAS,EAChBF,EAAYG,UAAUC,IAAI,QAC1BJ,EAAYG,UAAUE,OAAO,QAC1B,WACLL,EAAYG,UAAUE,OAAO,WAE9B,CAACT,IAGF,wBACEU,KAAK,QACLC,UAAU,gBACVC,IAAKX,EACLY,QArBqB,WACHZ,EAASI,QACjBE,UAAUE,OAAO,SAoB3BK,MAAM,QALR,SAOE,mBAAGH,UAAU,oBASnBZ,EAAMgB,aAAe,CACnBf,WAAY,IAGCD,QCjCAiB,EARA,WACb,OACE,wBAAQN,KAAK,SAASC,UAAU,eAAeG,MAAM,gBAArD,SACE,mBAAGH,UAAU,mB,iBCDbM,EAAkBC,aAAW,YAA6C,IAA1CC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,cAQzD,OACE,oBAAIV,UAAU,iCAAiCE,QAR7B,WACC,mBAAfO,IACFC,EAAcD,GACdD,EAAQG,KAAR,kBAAwBF,MAK1B,SACGA,OAUPH,EAAgBM,YAAc,CAC5BH,WAAY,iBACZC,cAAe,cAGFJ,QCvBTO,EAAc,SAAC,GAAiD,IAA/CxB,EAA8C,EAA9CA,WAAYyB,EAAkC,EAAlCA,OAAQJ,EAA0B,EAA1BA,cAAeK,EAAW,EAAXA,KAAW,EACvCC,mBAAS,IAD8B,mBAC5DC,EAD4D,KACpDC,EADoD,OAEjCF,mBAAS,GAFwB,mBAE5DG,EAF4D,KAEjDC,EAFiD,KAsBnE,OAlBA5B,qBAAU,WAOR,GAAIH,EAAWM,OAAS,EAAG,CACzB,IAAM0B,EAAmBC,YAPJ,WACrBC,IAAMC,IAAN,UAAa7C,EAAb,kBAAgCU,EAAhC,WAAoDoC,MAAK,SAACC,GACxDR,EAAUQ,QAKwC,KACpDN,EAAaC,GAGf,OAAO,WACLH,EAAU,IACVS,aAAaR,MAEd,CAAC9B,IAGF,oBACEW,UAAS,mCACPc,GAAU,iCADH,YAELC,GAAQ,QAHd,SAKGa,OAAOC,KAAKZ,GAAQtB,OAAS,GAAKsB,EAAOa,KAAKnC,OAAS,EACtDsB,EAAOa,KAAKC,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACjB,OACE,cAAC,EAAD,CAEEvB,WAAYuB,EACZtB,cAAeA,GAFVsB,MAOX,cAAC,EAAD,CAAiBvB,WAAY,sBAarCI,EAAYD,YAAc,CACxBvB,WAAY,GACZyB,QAAQ,EACRJ,cAAe,aACfK,MAAM,GAGOF,QCxDToB,EAAS1B,aAAW,YAAyC,IAAtCC,EAAqC,EAArCA,QAAS0B,EAA4B,EAA5BA,MAA4B,IAArBpB,cAAqB,WAC5BE,mBAASkB,GADmB,mBACzD7C,EADyD,KAC7CqB,EAD6C,OAE9BM,mBAASmB,OAAOC,YAFc,mBAEzDC,EAFyD,KAE9CC,EAF8C,KAG1DC,EAAWhD,mBAH+C,EAIdyB,oBAAS,GAJK,mBAIzDwB,EAJyD,KAItCC,EAJsC,KAMhEN,OAAOO,iBAAiB,UAAU,WAChCJ,EAAaH,OAAOC,eAGtB5C,qBAAU,WACRkB,EAAcwB,KACb,CAACA,IA6BJ,OACE,uBACElC,UAAS,iBAAYc,GAAU,gBAC/B6B,SAhBiB,SAACC,GACpBA,EAAEC,iBACExD,EAAWM,OAAS,IACtB8C,GAAqB,GACrBjC,EAAQG,KAAR,kBAAwBtB,MAaxByD,QATgB,WAClBP,EAAS7C,QAAQqD,QACjBrC,EAAc,KAId,UAKE,cAAC,EAAD,IACA,sBAAKV,UAAU,cAAf,UACE,uBACEA,UAAS,6BAAwBc,GAAU,gBAC3Cf,KAAK,OACLiD,aAAa,MACbC,YACEpE,EAAoBwD,EAChB,qCACA,gBAENpC,IAAKsC,EACLW,MAAO7D,EACP8D,QA9CY,SAACP,GACnB,IAAMQ,EAAQR,EAAES,OACXb,GAAmBC,GAAqB,GAC7C/B,EAAc0C,EAAMF,QA4CdI,QAzCiB,WACvBb,GAAqB,IAyCfc,OAtCgB,WACtBd,GAAqB,MAuCjB,cAAC,EAAD,CACEpD,WAAYA,EACZqB,cAAeA,EACfI,OAAQA,EACRC,KAAMyB,OAGV,cAAC,EAAD,CAAOnD,WAAYA,EAAYqB,cAAeA,UAUpDuB,EAAO7B,aAAe,CACpB8B,MAAO,GACPpB,QAAQ,GAGKmB,QChDAuB,G,MAzCF,WACX,OACE,qBAAKxD,UAAU,OAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,0BAASA,UAAU,0BAAnB,UACE,oBAAIA,UAAU,iCAAd,sBACA,oBAAGA,UAAU,gCAAb,qCAC2B,IACzB,mBACEA,UAAU,sCACVyD,KAAK,+BAFP,kCAFF,OAUA,mBAAGzD,UAAU,gCAAb,gDAIF,cAAC,EAAD,IACA,yBAASA,UAAU,4BAAnB,SACE,oBAAGA,UAAU,kCAAb,UACE,6CACC4B,OAAOC,KAAK/C,GAAWiD,KAAI,SAAC2B,EAAOC,GAAR,OAC1B,uBAEE3D,UAAU,yCAFZ,iBAKE,cAAC,IAAD,CAAM4D,GAAE,kBAAaF,GAArB,SAA+BA,IAC9BC,EAAQ/B,OAAOC,KAAK/C,GAAWa,OAAS,GAAK,MALzC+D,kBCfNG,G,MAbMtD,aAAW,YAAkB,IAAfC,EAAc,EAAdA,QAKjC,OAJAhB,qBAAU,WACR8B,YAAW,kBAAMd,EAAQG,KAAR,OAAmB,OACnC,IAGD,sBAAKX,UAAU,eAAf,UACE,4DACA,+E,iCCRO8D,EAAS,SAAC5B,GAAW,IAAD,EACHlB,mBAAS,IADN,mBACxBC,EADwB,KAChBC,EADgB,OAEGF,oBAAS,GAFZ,mBAExB+C,EAFwB,KAEbC,EAFa,OAGLhD,mBAAS,MAHJ,mBAGxBiD,EAHwB,KAGjBC,EAHiB,KAqC/B,OAhCA1E,qBAAU,WACR,IAAI2E,GAAW,EA0Bf,OAxBa,uCAAG,sBAAAC,EAAA,6DACdJ,GAAa,GADC,SAGRzC,IACHC,IADG,URfO,4BQeP,OACUU,GAAS,CACrBmC,QAAS,CACPC,cAAc,aAAD,OAAeC,kDAG/B9C,MAAK,SAACC,GACAyC,IACHjD,EAAUQ,GACVsC,GAAa,OAGhBQ,OAAM,SAACP,GACND,GAAa,GACTC,EAAMvC,SAAUwC,EAASD,EAAMvC,UAC9BwC,EAASD,EAAMQ,YAlBV,2CAAH,oDAsBbC,GAEO,WACLP,GAAW,KAEZ,CAACjC,IAEG,CAACjB,EAAQ8C,EAAWE,ICzChBU,G,MAAqB,SAACC,GAAD,OAChCA,EAAO,GAAGC,cAAgBD,EAAOE,MAAM,EAAGF,EAAOjF,UCKpCoF,EAJM,WACnB,OAAO,sECGHC,G,MAAa,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,eAAqB,EACVpB,EAAO,GAAD,OAAIlF,GAAJ,OAA4BqG,EAA5B,MADI,mBACtChE,EADsC,KAC9B8C,EAD8B,KACnBE,EADmB,KAK7C,OAAKF,IAAcE,GAASrC,OAAOC,KAAKZ,GAAQtB,OAAS,EAErD,qBAAKwF,KAAK,SAASnF,UAAU,QAAQE,QAJrB,kBAAMgF,GAAe,IAIrC,SACE,sBAAKlF,UAAU,aAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,6BAAKiB,EAAOa,KAAKsD,KAAKC,OACtB,kCAAKpE,EAAOa,KAAKsD,KAAKE,eAExB,qBAAKtF,UAAU,kBAAf,SACE,qBACEuF,IAAKtE,EAAOa,KAAK0D,KAAKC,QACtBC,IAAKzE,EAAOa,KAAK6D,oBAGrB,sBAAK3F,UAAU,uBAAf,UACE,mBAAGA,UAAU,kBACb,4BACiC,OAA9BiB,EAAOa,KAAK8D,SAASC,KAClB,qBADH,UAEM5E,EAAOa,KAAK8D,SAASC,KAF3B,aAEoC5E,EAAOa,KAAK8D,SAASE,mBAO7D,OASXd,EAAW5E,aAAe,CACxB6E,GAAI,GACJC,eAAgB,cAGHF,QC5CTe,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACXf,EAAuBe,EAAvBf,GAAIgB,EAAmBD,EAAnBC,IAAKC,EAAcF,EAAdE,KAAMR,EAAQM,EAARN,IADQ,EAEO1E,oBAAS,GAFhB,mBAExBmF,EAFwB,KAEXjB,EAFW,KAM/B,OAAkC,IAA9BtD,OAAOC,KAAKmE,GAAOrG,OAEnB,qCACE,yBAAQK,UAAU,gCAAlB,UACE,qBACEuF,IAAKU,EACLP,IAAKA,EACL1F,UAAU,qCACVE,QAVU,kBAAMgF,GAAe,MAYjC,qBAAKlF,UAAU,sCAAf,SACGkG,EAAKvG,OAAS,GACbuG,EAAKnE,KAAI,YAAgB,IAAb5B,EAAY,EAAZA,MACV,OACE,cAAC,IAAD,CACEyD,GAAE,kBAAazD,GACfH,UAAU,4CAFZ,SAKG2E,EAAmBxE,IALtB,UAGU8E,GAHV,OAGe9E,WAd8B8E,EAAGmB,YAuBzDD,GAAe,cAAC,EAAD,CAAYlB,GAAIA,EAAIC,eAAgBA,OAIjD,cAAC,EAAD,KAQXa,EAAU3F,aAAe,CACvB4F,MAAO,IAGMD,QCnDTM,EAAc,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrB,OACE,qBAAKtG,UAAU,0BAAf,SACGsG,EAAOvE,KAAI,SAACiE,EAAOrC,GAAR,OACV,cAAC,EAAD,CAAuCqC,MAAOA,GAA9C,UAAmBA,EAAMf,IAAzB,OAA8BtB,UAUtC0C,EAAYjG,aAAe,CACzBkG,OAAQ,IAGKD,QC2DAE,EA5EO,SAAC,GAAoB,IAAlBlH,EAAiB,EAAjBA,WAAiB,EACZ2B,mBAAS,IADG,mBACjCC,EADiC,KACzBC,EADyB,OAEFF,mBAAS,GAFP,mBAEjCwF,EAFiC,KAEpBC,EAFoB,OAGMzF,mBAAS,GAHf,mBAGjC0F,EAHiC,KAGhBC,EAHgB,KAIlCC,EAAerH,mBAErBC,qBAAU,WAaR,OAJIH,EAAWM,OAAS,GAPtB4B,IACGC,IADH,UACU7C,EADV,qBACgCU,EADhC,YAEGoC,MAAK,SAACC,GACLR,EAAUQ,MAQT,WACLR,EAAU,OAEX,CAAC7B,IAeJ,OACE,sBAAKW,UAAU,kBAAf,UACE,qBACEA,UAAS,qCACS,IAAhBwG,GAAqB,YAEvBtG,QAda,WACjB0G,EAAalH,QAAQmH,OAAOL,EAAc,IAAK,IAS7C,SAME,mBAAGxG,UAAU,gBAEf,qBACEA,UAAU,6BACVC,IAAK2G,EACLE,SAjBe,WACnBL,EAAeG,EAAalH,QAAQqH,aAalC,SAKGnF,OAAOC,KAAKZ,GAAQtB,OAAS,GAAKsB,EAAOa,KAAKnC,OAAS,EACpDsB,EAAOa,KAAKC,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OACd,cAAC,IAAD,CAEE4B,GAAE,kBAAa5B,GACfhC,UAAU,mCAHZ,SAKGgC,GAJIA,MAOT,OAEN,qBACEhC,UAAS,sCACPwG,IAAgBE,GAAuC,IAApBA,GAAyB,YAE9DxG,QA5Cc,WAClB0G,EAAalH,QAAQmH,OAAOL,EAAc,IAAK,GAC/CG,EAAmBC,EAAalH,QAAQqH,aAsCtC,SAME,mBAAG/G,UAAU,qBCuENgH,EAxIA,SAAC,GAIT,IAFO9E,EAER,EAHJ+E,MACEC,OAAUhF,MAER,EAC4BlB,mBAAS,IADrC,mBACGmG,EADH,KACaC,EADb,OAE8BpG,mBAAS,IAFvC,mBAEGqG,EAFH,KAEcC,EAFd,OAG4BtG,mBAAS,IAHrC,mBAGGuG,EAHH,KAGaC,EAHb,OAIoBxG,mBAAS,GAJ7B,mBAIGyG,EAJH,KAISC,EAJT,OAK8B1G,mBAAS,GALvC,mBAKGG,EALH,KAKcC,EALd,OAM+B0C,EAAO,GAAD,OACpClF,EADoC,kBACDsD,EADC,6BACyBuF,IAP9D,mBAMGxG,EANH,KAMW8C,EANX,KAMsBE,EANtB,KASE0D,EAAapI,mBATf,EAU8ByB,mBAASmB,OAAOC,YAV9C,mBAUGC,EAVH,KAUcC,EAVd,KAYEsF,EAAiB,WACrBF,EAAQD,EAAO,IAGXI,EAAuB,IAAIC,sBAAqB,SAACC,GACrD,GAAIA,EAAQ,GAAGC,kBAAoB,EAAG,CACpC,IAAM3G,EAAmBC,WAAWsG,EAAgB,KACpDxG,EAAaC,OA4DjB,OAxDAc,OAAOO,iBAAiB,UAAU,WAChCJ,EAAaH,OAAOC,eAGtB5C,qBAAU,WAEN4H,EAAY,IACZE,EAAa,IACbE,EAAY,IACZE,EAAQ,GACRvF,OAAO0E,OAAO,EAAG,KAIlB,CAAC3E,IAEJ1C,qBAAU,WAkCR,OAPKuE,QAA6BkE,IAAhBhH,EAAOa,MACnBb,EAAOa,KAAKoG,aAAeT,KA3BZ,WACnB,IAAMU,EAAS,GACbC,EAAS,GACTC,EAAW,GAEbpH,EAAOa,KAAKwG,QAAQC,SAClB,WAAsC5E,GAAW,IAA9CsB,EAA6C,EAA7CA,GAAIO,EAAyC,EAAzCA,KAAMU,EAAmC,EAAnCA,KAAMP,EAA6B,EAA7BA,gBAEXK,EAAQ,CACZf,GAAIA,EACJgB,IAHgBT,EAAVgD,MAINtC,KAAMA,EACNR,IAAKC,GAGHhC,EAAQ,IAAM,EAAGwE,EAAOxH,KAAKqF,GACxBrC,EAAQ,IAAM,EAAGyE,EAAOzH,KAAKqF,GACjCqC,EAAS1H,KAAKqF,MAIvBoB,EAAY,GAAD,mBAAKD,GAAagB,IAC7Bb,EAAa,GAAD,mBAAKD,GAAce,IAC/BZ,EAAY,GAAD,mBAAKD,GAAac,IAK3BI,IACCxE,GAAS4D,EAAqBa,QAAQf,EAAWjI,UAI/C,WACLmI,EAAqBc,aACrBhH,aAAaR,MAEd,CAAC4C,IAGF,qBAAK/D,UAAU,UAAf,SACE,sBAAKA,UAAU,SAAf,UACE,qBAAKA,UAAU,iBAAf,SACE,cAAC,EAAD,CAAQkC,MAAOA,EAAOpB,QAAQ,MAG/BmD,EACC,cAAC,EAAD,IAEA,qCACE,oBAAIjE,UAAU,gBAAd,SAA+B2E,EAAmBzC,KAElD,cAAC,EAAD,CAAe7C,WAAY6C,IAEN,IAApBiF,EAASxH,SAAiBoE,GACzB,qFAGF,sBAAK/D,UAAU,kBAAf,UACE,cAAC,EAAD,CACEsG,OACEjE,EAAYxD,EAAZ,sBACQsI,GADR,YACqBE,GADrB,YACmCE,IAC/BlF,EAAYxD,EAAZ,sBACIsI,GADJ,YACiBI,EAASzC,MAAM,EAAGyC,EAAS5H,OAAS,KACrDwH,IAIP9E,EAAYxD,GACX,cAAC,EAAD,CACEyH,OACEjE,EAAYxD,EAAZ,sBACQwI,GADR,YACsBE,EAASzC,MAAMyC,EAAS5H,OAAS,KACnD0H,IAKThF,EAAYxD,GACX,cAAC,EAAD,CAAayH,OAAQiB,UAM7B,qBAAKtH,IAAK0H,EAAYiB,MAAO,CAAEC,MAAO,IAAKC,OAAQ,aCtH5CC,EAhBD,WACZ,OACE,cAAC,IAAD,CAAeC,SAAQ,UAAKzE,oBAAL,KAAvB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,IAAIC,UAAW3F,IACjC,cAAC,IAAD,CACEyF,OAAK,EACLC,KAAK,iBACLE,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAYA,OAEjC,cAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,IAAIC,UAAWtF,U,YCVzCyF,IAASF,OACP,cAAC,IAAMG,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a89ed197.chunk.js","sourcesContent":["export const API = \"https://api.unsplash.com\";\r\nexport const API_WORDS = \"https://api.datamuse.com\";\r\nexport const getDataTypes = {\r\n  searchPhotos: \"/search/photos/\",\r\n  getPhoto: \"/photos/\",\r\n};\r\nexport const BREAKPOINTS = {\r\n  medium: 1300,\r\n  small: 620,\r\n};\r\nexport const trendings = {\r\n  flower: \"flower\",\r\n  wallpapers: \"wallpapers\",\r\n  backgrounds: \"backgrounds\",\r\n  happy: \"happy\",\r\n  love: \"love\",\r\n};\r\n","import React, { useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Reset = ({ inputValue }) => {\r\n  const resetRef = useRef();\r\n\r\n  const handleClickReset = () => {\r\n    const resetButton = resetRef.current;\r\n    resetButton.classList.remove(\"show\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    const resetButton = resetRef.current;\r\n\r\n    inputValue.length > 0\r\n      ? resetButton.classList.add(\"show\")\r\n      : resetButton.classList.remove(\"show\");\r\n    return () => {\r\n      resetButton.classList.remove(\"show\");\r\n    };\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <button\r\n      type=\"reset\"\r\n      className=\"search__reset\"\r\n      ref={resetRef}\r\n      onClick={handleClickReset}\r\n      title=\"Clear\"\r\n    >\r\n      <i className=\"icon-cancel\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nReset.propTypes = {\r\n  inputValue: PropTypes.string,\r\n};\r\n\r\nReset.defaultProps = {\r\n  inputValue: \"\",\r\n};\r\n\r\nexport default Reset;\r\n","import React from \"react\";\r\n\r\nconst Submit = () => {\r\n  return (\r\n    <button type=\"submit\" className=\"search__send\" title=\"Search photos\">\r\n      <i className=\"icon-search\"></i>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Submit;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SuggestionsItem = withRouter(({ history, suggestion, setInputValue }) => {\r\n  const handleClick = () => {\r\n    if (suggestion !== \"no suggestions\") {\r\n      setInputValue(suggestion);\r\n      history.push(`/photos/${suggestion}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"search__box__suggestions__item\" onClick={handleClick}>\r\n      {suggestion}\r\n    </li>\r\n  );\r\n});\r\n\r\nSuggestionsItem.propTypes = {\r\n  suggestion: PropTypes.string,\r\n  setInputValue: PropTypes.func,\r\n};\r\n\r\nSuggestionsItem.defaultProp = {\r\n  suggestion: \"no suggestions\",\r\n  setInputValue: () => {},\r\n};\r\n\r\nexport default SuggestionsItem;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { API_WORDS } from \"../../../constants\";\r\nimport SuggestionsItem from \"./SuggestionsItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Suggestions = ({ inputValue, isGray, setInputValue, show }) => {\r\n  const [result, setResult] = useState({});\r\n  const [timeoutId, setTimeoutId] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const getSuggestions = () => {\r\n      axios.get(`${API_WORDS}/sug?s=${inputValue}&max=4`).then((response) => {\r\n        setResult(response);\r\n      });\r\n    };\r\n\r\n    if (inputValue.length > 0) {\r\n      const currentTimeoutId = setTimeout(getSuggestions, 500);\r\n      setTimeoutId(currentTimeoutId);\r\n    }\r\n\r\n    return () => {\r\n      setResult({});\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [inputValue]);\r\n\r\n  return (\r\n    <ul\r\n      className={`search__box__suggestions ${\r\n        isGray && \"search__box__suggestions--gray\"\r\n      } ${show && \"show\"}`}\r\n    >\r\n      {Object.keys(result).length > 0 && result.data.length > 0 ? (\r\n        result.data.map(({ word }) => {\r\n          return (\r\n            <SuggestionsItem\r\n              key={word}\r\n              suggestion={word}\r\n              setInputValue={setInputValue}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <SuggestionsItem suggestion={\"no suggestions\"} />\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nSuggestions.propTypes = {\r\n  inputValue: PropTypes.string,\r\n  isGray: PropTypes.bool,\r\n  setInputValue: PropTypes.func,\r\n  show: PropTypes.bool,\r\n};\r\n\r\nSuggestions.defaultProp = {\r\n  inputValue: \"\",\r\n  isGray: false,\r\n  setInputValue: () => {},\r\n  show: false,\r\n};\r\n\r\nexport default Suggestions;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./index.scss\";\r\nimport Reset from \"./Reset\";\r\nimport Submit from \"./Submit\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { BREAKPOINTS } from \"../../constants\";\r\nimport Suggestions from \"./Suggestions\";\r\n\r\nconst Search = withRouter(({ history, query, isGray = false }) => {\r\n  const [inputValue, setInputValue] = useState(query);\r\n  const [pageWidth, setPageWidth] = useState(window.innerWidth);\r\n  const inputRef = useRef();\r\n  const [toggleSuggestions, setToggleSuggestions] = useState(false);\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    setPageWidth(window.innerWidth);\r\n  });\r\n\r\n  useEffect(() => {\r\n    setInputValue(query);\r\n  }, [query]);\r\n\r\n  const handleInput = (e) => {\r\n    const input = e.target;\r\n    if (!toggleSuggestions) setToggleSuggestions(true);\r\n    setInputValue(input.value);\r\n  };\r\n\r\n  const handleFocusInput = () => {\r\n    setToggleSuggestions(true);\r\n  };\r\n\r\n  const handleBlurInput = () => {\r\n    setToggleSuggestions(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (inputValue.length > 0) {\r\n      setToggleSuggestions(false);\r\n      history.push(`/photos/${inputValue}`);\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    inputRef.current.focus();\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  return (\r\n    <form\r\n      className={`search ${isGray && \"search--gray\"}`}\r\n      onSubmit={handleSubmit}\r\n      onReset={handleReset}\r\n    >\r\n      <Submit />\r\n      <div className=\"search__box\">\r\n        <input\r\n          className={`search__box__input ${isGray && \"search--gray\"}`}\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          placeholder={\r\n            BREAKPOINTS.small < pageWidth\r\n              ? \"Search free high-resolution photos\"\r\n              : \"Search photos\"\r\n          }\r\n          ref={inputRef}\r\n          value={inputValue}\r\n          onInput={handleInput}\r\n          onFocus={handleFocusInput}\r\n          onBlur={handleBlurInput}\r\n        />\r\n        <Suggestions\r\n          inputValue={inputValue}\r\n          setInputValue={setInputValue}\r\n          isGray={isGray}\r\n          show={toggleSuggestions}\r\n        />\r\n      </div>\r\n      <Reset inputValue={inputValue} setInputValue={setInputValue} />\r\n    </form>\r\n  );\r\n});\r\n\r\nSearch.propTypes = {\r\n  query: PropTypes.string,\r\n  isGray: PropTypes.bool,\r\n};\r\n\r\nSearch.defaultProps = {\r\n  query: \"\",\r\n  isGray: false,\r\n};\r\n\r\nexport default Search;\r\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { trendings } from \"../../constants\";\nimport Search from \"../Search/index\";\nimport \"./index.scss\";\n\nconst Main = () => {\n  return (\n    <div className=\"main\">\n      <div className=\"main__container\">\n        <section className=\"main__container__header\">\n          <h1 className=\"main__container__header__title\">Unsplash</h1>\n          <p className=\"main__container__header__text\">\n            The internet's source of{\" \"}\n            <a\n              className=\"main__container__header__text__link\"\n              href=\"https://unsplash.com/license\"\n            >\n              freely-usable images\n            </a>\n            .\n          </p>\n          <p className=\"main__container__header__text\">\n            Powered by creators everywhere.\n          </p>\n        </section>\n        <Search />\n        <section className=\"main__container__trending\">\n          <p className=\"main__container__trending__text\">\n            <span>Trending:</span>\n            {Object.keys(trendings).map((trend, index) => (\n              <span\n                key={trend}\n                className=\"main__container__trending__text__links\"\n              >\n                &nbsp;\n                <Link to={`/photos/${trend}`}>{trend}</Link>\n                {index < Object.keys(trendings).length - 1 && \",\"}\n              </span>\n            ))}\n          </p>\n        </section>\n      </div>\n    </div>\n  );\n};\n\nexport default Main;\n","import React, { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport \"./index.scss\";\r\n\r\nconst PageNotFound = withRouter(({ history }) => {\r\n  useEffect(() => {\r\n    setTimeout(() => history.push(`/`), 2000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"pageNotFound\">\r\n      <p>Page not found 🤔</p>\r\n      <p>You will be redirected to the home page</p>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PageNotFound;\r\n","import axios from \"axios\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { API } from \"../../constants\";\r\n\r\nexport const useApi = (query) => {\r\n  const [result, setResult] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    let canceled = false;\r\n\r\n    const getData = async () => {\r\n      setIsLoading(true);\r\n\r\n      await axios\r\n        .get(`${API}${query}`, {\r\n          headers: {\r\n            Authorization: `Client-ID ${process.env.REACT_APP_ACCESS_KEY}`,\r\n          },\r\n        })\r\n        .then((response) => {\r\n          if (!canceled) {\r\n            setResult(response);\r\n            setIsLoading(false);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          setIsLoading(false);\r\n          if (error.response) setError(error.response);\r\n          else setError(error.message);\r\n        });\r\n    };\r\n\r\n    getData();\r\n\r\n    return () => {\r\n      canceled = true;\r\n    };\r\n  }, [query]);\r\n\r\n  return [result, isLoading, error];\r\n};\r\n","export const firstLetterToUpper = (string) =>\r\n  string[0].toUpperCase() + string.slice(1, string.length);\r\n","import React from \"react\";\r\n\r\nconst ErrorMessage = () => {\r\n  return <p>Something went wrong... 😅</p>;\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React from \"react\";\r\nimport \"./index.scss\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useApi } from \"../../../hooks/useApi\";\r\nimport { getDataTypes } from \"../../../constants\";\r\n\r\nconst PhotoModal = ({ id, setToggleModal }) => {\r\n  const [result, isLoading, error] = useApi(`${getDataTypes.getPhoto}${id}/`);\r\n\r\n  const handleClose = () => setToggleModal(false);\r\n\r\n  if (!isLoading && !error && Object.keys(result).length > 0) {\r\n    return (\r\n      <div role=\"button\" className=\"modal\" onClick={handleClose}>\r\n        <div className=\"modal__box\">\r\n          <div className=\"modal__box__user\">\r\n            <h3>{result.data.user.name}</h3>\r\n            <p>@{result.data.user.username}</p>\r\n          </div>\r\n          <div className=\"modal__box__img\">\r\n            <img\r\n              src={result.data.urls.regular}\r\n              alt={result.data.alt_description}\r\n            ></img>\r\n          </div>\r\n          <div className=\"modal__box__location\">\r\n            <i className=\"icon-location\"></i>\r\n            <p>\r\n              {result.data.location.city === null\r\n                ? \"Location not found\"\r\n                : `${result.data.location.city}, ${result.data.location.country}`}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nPhotoModal.propTypes = {\r\n  id: PropTypes.string,\r\n  setToggleModal: PropTypes.func,\r\n};\r\n\r\nPhotoModal.defaultProps = {\r\n  id: \"\",\r\n  setToggleModal: () => {},\r\n};\r\n\r\nexport default PhotoModal;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { firstLetterToUpper } from \"../../../utils\";\r\nimport ErrorMessage from \"../../ErrorMessage\";\r\nimport PhotoModal from \"../PhotoModal\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PhotoItem = ({ image }) => {\r\n  const { id, url, tags, alt } = image;\r\n  const [toggleModal, setToggleModal] = useState(false);\r\n\r\n  const handleModal = () => setToggleModal(true);\r\n\r\n  if (Object.keys(image).length === 4) {\r\n    return (\r\n      <>\r\n        <figure className=\"photos__gallery__column__item\" key={id.toString()}>\r\n          <img\r\n            src={url}\r\n            alt={alt}\r\n            className=\"photos__gallery__column__item__img\"\r\n            onClick={handleModal}\r\n          />\r\n          <div className=\"photos__gallery__column__item__tags\">\r\n            {tags.length > 0 &&\r\n              tags.map(({ title }) => {\r\n                return (\r\n                  <Link\r\n                    to={`/photos/${title}`}\r\n                    className=\"photos__gallery__column__item__tags__item\"\r\n                    key={`${id}${title}`}\r\n                  >\r\n                    {firstLetterToUpper(title)}\r\n                  </Link>\r\n                );\r\n              })}\r\n          </div>\r\n        </figure>\r\n\r\n        {toggleModal && <PhotoModal id={id} setToggleModal={setToggleModal} />}\r\n      </>\r\n    );\r\n  } else {\r\n    return <ErrorMessage />;\r\n  }\r\n};\r\n\r\nPhotoItem.propTypes = {\r\n  image: PropTypes.object,\r\n};\r\n\r\nPhotoItem.defaultProps = {\r\n  image: {},\r\n};\r\n\r\nexport default PhotoItem;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport PhotoItem from \"../PhotoItem\";\r\n\r\nconst PhotoColumn = ({ images }) => {\r\n  return (\r\n    <div className=\"photos__gallery__column\">\r\n      {images.map((image, index) => (\r\n        <PhotoItem key={`${image.id}${index}`} image={image} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nPhotoColumn.propTypes = {\r\n  images: PropTypes.array,\r\n};\r\n\r\nPhotoColumn.defaultProps = {\r\n  images: [],\r\n};\r\n\r\nexport default PhotoColumn;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { API_WORDS } from \"../../../constants\";\r\n\r\nconst PhotosSimilar = ({ inputValue }) => {\r\n  const [result, setResult] = useState({});\r\n  const [scrollValue, setScrollValue] = useState(0);\r\n  const [prevScrollValue, setPrevScrollValue] = useState(0);\r\n  const containerRef = useRef();\r\n\r\n  useEffect(() => {\r\n    const getSuggestions = () => {\r\n      axios\r\n        .get(`${API_WORDS}/words?ml=${inputValue}&max=20`)\r\n        .then((response) => {\r\n          setResult(response);\r\n        });\r\n    };\r\n\r\n    if (inputValue.length > 0) {\r\n      getSuggestions();\r\n    }\r\n\r\n    return () => {\r\n      setResult({});\r\n    };\r\n  }, [inputValue]);\r\n\r\n  const handleRight = () => {\r\n    containerRef.current.scroll(scrollValue + 100, 0);\r\n    setPrevScrollValue(containerRef.current.scrollLeft);\r\n  };\r\n\r\n  const handleLeft = () => {\r\n    containerRef.current.scroll(scrollValue - 100, 0);\r\n  };\r\n\r\n  const handleScroll = () => {\r\n    setScrollValue(containerRef.current.scrollLeft);\r\n  };\r\n\r\n  return (\r\n    <div className=\"photos__similar\">\r\n      <div\r\n        className={`photos__similar__leftArrow ${\r\n          scrollValue === 0 && \"unactive\"\r\n        }`}\r\n        onClick={handleLeft}\r\n      >\r\n        <i className=\"icon-left\"></i>\r\n      </div>\r\n      <div\r\n        className=\"photos__similar__container\"\r\n        ref={containerRef}\r\n        onScroll={handleScroll}\r\n      >\r\n        {Object.keys(result).length > 0 && result.data.length > 0\r\n          ? result.data.map(({ word }) => (\r\n              <Link\r\n                key={word}\r\n                to={`/photos/${word}`}\r\n                className=\"photos__similar__container__item\"\r\n              >\r\n                {word}\r\n              </Link>\r\n            ))\r\n          : null}\r\n      </div>\r\n      <div\r\n        className={`photos__similar__rightArrow ${\r\n          scrollValue === prevScrollValue && prevScrollValue !== 0 && \"unactive\"\r\n        }`}\r\n        onClick={handleRight}\r\n      >\r\n        <i className=\"icon-right\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotosSimilar;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useApi } from \"../../hooks/useApi\";\r\nimport Search from \"../Search\";\r\nimport { getDataTypes, BREAKPOINTS } from \"../../constants\";\r\nimport \"./index.scss\";\r\nimport PhotoColumn from \"./PhotoColumn\";\r\nimport { firstLetterToUpper } from \"../../utils\";\r\nimport ErrorMessage from \"../ErrorMessage\";\r\nimport PhotosSimilar from \"./PhotosSimilar\";\r\n\r\nconst Photos = ({\r\n  match: {\r\n    params: { query },\r\n  },\r\n}) => {\r\n  const [colFirst, setColFirst] = useState([]);\r\n  const [colSecond, setColSecond] = useState([]);\r\n  const [colThird, setColThird] = useState([]);\r\n  const [page, setPage] = useState(1);\r\n  const [timeoutId, setTimeoutId] = useState(0);\r\n  const [result, isLoading, error] = useApi(\r\n    `${getDataTypes.searchPhotos}?query=${query}&per_page=12&page=${page}`\r\n  );\r\n  const triggerRef = useRef();\r\n  const [pageWidth, setPageWidth] = useState(window.innerWidth);\r\n\r\n  const handleNextPage = () => {\r\n    setPage(page + 1);\r\n  };\r\n\r\n  const intersectionObserver = new IntersectionObserver((entries) => {\r\n    if (entries[0].intersectionRatio > 0) {\r\n      const currentTimeoutId = setTimeout(handleNextPage, 1000);\r\n      setTimeoutId(currentTimeoutId);\r\n    }\r\n  });\r\n\r\n  window.addEventListener(\"resize\", () => {\r\n    setPageWidth(window.innerWidth);\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleClear = () => {\r\n      setColFirst([]);\r\n      setColSecond([]);\r\n      setColThird([]);\r\n      setPage(1);\r\n      window.scroll(0, 0);\r\n    };\r\n\r\n    handleClear();\r\n  }, [query]);\r\n\r\n  useEffect(() => {\r\n    const handleResult = () => {\r\n      const arrOne = [],\r\n        arrTwo = [],\r\n        arrThree = [];\r\n\r\n      result.data.results.forEach(\r\n        ({ id, urls, tags, alt_description }, index) => {\r\n          const { small } = urls;\r\n          const image = {\r\n            id: id,\r\n            url: small,\r\n            tags: tags,\r\n            alt: alt_description,\r\n          };\r\n\r\n          if (index % 3 === 0) arrOne.push(image);\r\n          else if (index % 2 === 0) arrTwo.push(image);\r\n          else arrThree.push(image);\r\n        }\r\n      );\r\n\r\n      setColFirst([...colFirst, ...arrOne]);\r\n      setColSecond([...colSecond, ...arrTwo]);\r\n      setColThird([...colThird, ...arrThree]);\r\n    };\r\n\r\n    if (!isLoading && result.data !== undefined) {\r\n      if (result.data.total_pages >= page) {\r\n        handleResult();\r\n        !error && intersectionObserver.observe(triggerRef.current);\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      intersectionObserver.disconnect();\r\n      clearTimeout(timeoutId);\r\n    };\r\n  }, [isLoading]);\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"photos\">\r\n        <div className=\"photos__search\">\r\n          <Search query={query} isGray={true} />\r\n        </div>\r\n\r\n        {error ? (\r\n          <ErrorMessage />\r\n        ) : (\r\n          <>\r\n            <h1 className=\"photos__title\">{firstLetterToUpper(query)}</h1>\r\n\r\n            <PhotosSimilar inputValue={query} />\r\n\r\n            {colFirst.length === 0 && !isLoading && (\r\n              <p>No pictures with given searching phrase 😕</p>\r\n            )}\r\n\r\n            <div className=\"photos__gallery\">\r\n              <PhotoColumn\r\n                images={\r\n                  pageWidth < BREAKPOINTS.small\r\n                    ? [...colFirst, ...colSecond, ...colThird]\r\n                    : pageWidth < BREAKPOINTS.medium\r\n                    ? [...colFirst, ...colThird.slice(0, colThird.length / 2)]\r\n                    : colFirst\r\n                }\r\n              />\r\n\r\n              {pageWidth > BREAKPOINTS.small && (\r\n                <PhotoColumn\r\n                  images={\r\n                    pageWidth < BREAKPOINTS.medium\r\n                      ? [...colSecond, ...colThird.slice(colThird.length / 2)]\r\n                      : colSecond\r\n                  }\r\n                />\r\n              )}\r\n\r\n              {pageWidth > BREAKPOINTS.medium && (\r\n                <PhotoColumn images={colThird} />\r\n              )}\r\n            </div>\r\n          </>\r\n        )}\r\n\r\n        <div ref={triggerRef} style={{ width: 100, height: 100 }}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Photos;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Main from \"../Main\";\r\nimport PageNotFound from \"../PageNotFound\";\r\nimport Photos from \"../Photos\";\r\n\r\nconst Index = () => {\r\n  return (\r\n    <BrowserRouter basename={`${process.env.PUBLIC_URL}/`}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route\r\n          exact\r\n          path=\"/photos/:query\"\r\n          render={(props) => <Photos {...props} />}\r\n        />\r\n        <Route exact path=\"*\" component={PageNotFound} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Index;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Index from \"./components/Index/index\";\nimport \"./globalStyles/index.scss\";\nimport \"./fontello/css/fontello.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}